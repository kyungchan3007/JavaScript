/*
실행 컨텍스트
클로저를 공부하기전에 실행 컨텍스트를 봐야 이해될거 같다.. ㅠ

자 훓어보자!

실행컨텍스트는 자바스크립트의 동작원리를 담고 있는 핵심 개념이다. 실행 컨텍스트를 바르게 이해하면 자바스크립트가 스코프를 기반으로 식별자에 바인딩된 값( 식별자 바인딩 )을 관리하는 방식과 호이스팅이 발생하는 이유 클로저의 동작 방식, 그리고 태스크 큐와 함께 동작하는 이벤트 핸들러와 비동기 처리의 동작 방식을 이해할수 있다.

소스코드의 타입	설명
전역 코드	전역에 존재하는 소스코드를 말한다. 전역에 정의된 함수, 클래스 등의 내부 코드는 포함되지 않는다.
함수 코드	함수 내부에 존재하는 소스코드를 말한다. 함수내에 중첩된 함수, 클래스 등의 내부 코드는 포함되지 않는다.
eval 코드	빌트인 전역 함수인 eval 함수에 인수로 전달되어 실행되는 소스코드를 말한다.
모듈 코드	모듈 내부에 존재하는 소스코드를 말한다. 모듈 내부의 함수, 클래스 등의 내부 코드는 포함되지 않는다
자바스크립트 엔진은 소스코드를 2개의 과정, 즉 "소스코드의 평가" 와 소스코드의 실행" 과정으로 나누어 처리한다.

소스코드 평가 과정	실행 컨텍스트를 생성하고 변수, 함수 등의 선언문만 먼저 실행하여 생성된 변수나 함수 식별자를 키로 실행
소스코드 실행과정	선언문을 제외한 소스코드가 순차적으로 실행되기 시작한다. 변수나 함수의 참조를 실행 컨텍스트가 관리하는 스코프에서 검색

전역코드평가	전역 코드의 변수 선언문과 함수 선언문이 먼저실행, 생성된 전역 변수와 전역 함수가 실행컨텍스트가 관리하는 전역 스코프에 등록, 이때 키워드로 선언된 전역 변수와 함수 선언문으로 정의된 전역 함수는 전역 객체의 프로퍼티와 메서드가 된다.
전역코드 실행	함수가 호출되면 순차적으로 실행되던 전역 코드의 실행을 일시 중단 하고 코드 실행순서를 변경하여 함수 내부로 진입한다.
함수 코드 평가	매개변수와 지역 변수 선언문이 먼저 실행되고, 그 결과 생성된 매개변수와 지역 변수가 실행 컨텍스가 관리하는 지역 스코프에 등록된다. 함수내부에서 지역 변수 처럼 사용할 수 있는 argument객체가 생성, this 바인딩 결정
함수코드실행	console.log 메서드를 호출하기 위해 먼저 식별자인 console을 스코프 체인을 통해 검색, console 식별자는 스코프 체인에 등록되어 있지 않으므로 전역 객체 프로퍼티로 존재, 전역 객체의 프로퍼티가 마치 전역 변수 처럼 전역 스코프를 통해 검색 가능해야 한다는 것을 의미 , log 프로퍼티를 console 객체의 프로토타입 체인을 통해 검색, 전달된 표현식 a + x + y 가 평가 , 메서드의 실행이 종료되면 함수코드 실행과정이 종료되고 함수 호출 이전으로 되돌아가서 전역코드 실행을 계속한다.

*/
